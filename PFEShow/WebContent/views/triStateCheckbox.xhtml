<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://primefaces.org/ui"
      xmlns:pe="http://primefaces.org/ui/extensions">
<ui:composition template="/templates/showcaseLayout.xhtml">
    <ui:define name="centerContent">
        <f:facet name="header">
            <h:outputText value="TriStateCheckbox"/>
        </f:facet>
        <h:panelGroup layout="block" styleClass="centerContent">
            <!-- This group is for description -->
            The TriStateCheckbox add a new state for a common SelectBooleanCheckbox.
            The value of TriStateCheckbox are mapped to 0,1,2 string values. This component can be customized with CSS classes for icons.
            <p/>
            This example show pe:triStateCheckbox in action.
        </h:panelGroup>

        <h:panelGroup layout="block" styleClass="centerExample">
            <!-- This group is for coding -->
            <p:growl id="growl" showDetail="true"/>
            
            <h:panelGrid id="triStateGrid" columns="2" styleClass="centerContent">
                <h:outputText value="Basic Usage with title: "/>
                <pe:triStateCheckbox value="#{triStateCheckBoxController.value1}" 
                                     stateOneTitle="StateOneTitle"
                                     stateTwoTitle="StateTwoTitle"
                                     stateThreeTitle="StateThreeTitle"/>
            
                <h:outputText value="Ajax Behavior: "/>
                <pe:triStateCheckbox id="ajaxTriState" value="#{triStateCheckBoxController.value2}">
                    <p:ajax update="growl" listener="#{triStateCheckBoxController.addMessage}"/>
                </pe:triStateCheckbox>
            
                <h:outputText value="Customs Icons: "/>
                <pe:triStateCheckbox value="#{triStateCheckBoxController.value3}"
                                     stateTwoIcon="ui-icon-plus"
                                     stateThreeIcon="ui-icon-minus"/>
                
                <h:panelGroup/>
                <pe:triStateCheckbox value="#{triStateCheckBoxController.value4}" itemLabel="Item Label"/>                
            </h:panelGrid>
            
            <p:commandButton value="Submit" process="triStateGrid" update="display" oncomplete="dlg.show()"
                             style="margin-top:10px;"/>
            
            <p:dialog header="Selected Values" showEffect="fade" hideEffect="fade" widgetVar="dlg">
                <h:panelGrid id="display" columns="1" style="margin: 10px;">
                    <h:outputText value="Value 1: #{triStateCheckBoxController.value1}"/>
                    <h:outputText value="Value 2: #{triStateCheckBoxController.value2}"/>
                    <h:outputText value="Value 3: #{triStateCheckBoxController.value3}"/>
                    <h:outputText value="Value 4: #{triStateCheckBoxController.value4}"/>
                </h:panelGrid>
            </p:dialog>
        </h:panelGroup>

        <ui:decorate template="/templates/twoTabsDecorator.xhtml">
            <!-- Code here should be left aligned -->
            <ui:define name="contentTab1">
&lt;p:growl id=&quot;growl&quot; showDetail=&quot;true&quot;/&gt;

&lt;h:panelGrid id=&quot;triStateGrid&quot; columns=&quot;2&quot; styleClass=&quot;centerContent&quot;&gt;
    &lt;h:outputText value=&quot;Basic Usage: &quot;/&gt;
    &lt;pe:triStateCheckbox value=&quot;\#{triStateCheckBoxController.value1}&quot;/&gt;

    &lt;h:outputText value=&quot;Ajax Behavior: &quot;/&gt;
    &lt;pe:triStateCheckbox id=&quot;ajaxTriState&quot; value=&quot;#{triStateCheckBoxController.value2}&quot;&gt;
        &lt;p:ajax update=&quot;growl&quot; listener=&quot;\#{triStateCheckBoxController.addMessage}&quot;/&gt;
    &lt;/pe:triStateCheckbox&gt;

    &lt;h:outputText value=&quot;Customs Icons: &quot;/&gt;
    &lt;pe:triStateCheckbox value=&quot;\#{triStateCheckBoxController.value3}&quot;
                         stateTwoIcon=&quot;ui-icon-plus&quot;
                         stateThreeIcon=&quot;ui-icon-minus&quot;/&gt;
    
    &lt;h:panelGroup/&gt;
    &lt;pe:triStateCheckbox value=&quot;\#{triStateCheckBoxController.value4}&quot; itemLabel=&quot;Item Label&quot;/&gt;                
&lt;/h:panelGrid&gt;

&lt;p:commandButton value=&quot;Submit&quot; process=&quot;triStateGrid&quot; update=&quot;display&quot; oncomplete=&quot;dlg.show()&quot;
                 style=&quot;margin-top:10px;&quot;/&gt;

&lt;p:dialog header=&quot;Selected Values&quot; showEffect=&quot;fade&quot; hideEffect=&quot;fade&quot; widgetVar=&quot;dlg&quot;&gt;
    &lt;h:panelGrid id=&quot;display&quot; columns=&quot;1&quot; style=&quot;margin: 10px;&quot;&gt;
        &lt;h:outputText value=&quot;Value 1: \#{triStateCheckBoxController.value1}&quot;/&gt;
        &lt;h:outputText value=&quot;Value 2: \#{triStateCheckBoxController.value2}&quot;/&gt;
        &lt;h:outputText value=&quot;Value 3: \#{triStateCheckBoxController.value3}&quot;/&gt;
        &lt;h:outputText value=&quot;Value 4: \#{triStateCheckBoxController.value4}&quot;/&gt;
    &lt;/h:panelGrid&gt;
&lt;/p:dialog&gt;
            </ui:define>
            <ui:define name="contentTab2">
@ManagedBean
@ViewScoped
public class TriStateCheckBoxController implements Serializable {

    private String value1;
    private String value2;
    private String value3;
    private String value4;

    public TriStateCheckBoxController() {
        value1 = &quot;2&quot;;
        value4 = &quot;1&quot;;
    }

    public String getValue1() {
        return value1;
    }

    public void setValue1(String value1) {
        this.value1 = value1;
    }

    public String getValue2() {
        return value2;
    }

    public void setValue2(String value2) {
        this.value2 = value2;
    }

    public String getValue3() {
        return value3;
    }

    public void setValue3(String value3) {
        this.value3 = value3;
    }

    public String getValue4() {
        return value4;
    }

    public void setValue4(String value4) {
        this.value4 = value4;
    }

    public void addMessage() {
        FacesMessage msg = new FacesMessage(FacesMessage.SEVERITY_INFO,
                &quot;State has been changed&quot;, &quot;State is = &quot; + value2);
        FacesContext.getCurrentInstance().addMessage(null, msg);
    }
}
            </ui:define>
        </ui:decorate>
    </ui:define>
    <ui:define name="useCases">

    </ui:define>
    <ui:define name="docuTable">
        <ui:include src="/sections/shared/documentation.xhtml">
            <ui:param name="tagName" value="triStateCheckbox"/>
        </ui:include>
    </ui:define>
</ui:composition>
</html>

